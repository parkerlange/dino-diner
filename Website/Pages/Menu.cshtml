@page
@model Website.Pages.MenuModel
@{
    ViewData["Title"] = "Menu";
}
<div class="content">
    <div class="results">
        <h1>Menu</h1>
        @if (Model.ComboItems.Count() > 0 && Model.menuCategory.Contains("CretaceousCombo"))
        {
            <h2>Combos</h2>
            <div id="Combo-Items">
                @for (int i = 0; i < Model.ComboItems.Count(); i++)
                {
                    <div class="menu-item">
                        <h3 id="menuItem">@Model.ComboItems.ElementAt(i).ToString()</h3>
                        <table>
                            <tr>
                                <th id="item-heading">Size</th>
                                <th id="item-heading">Price</th>
                                <th id="item-heading">Calories</th>
                            </tr>
                            <tr>
                                <td>Small</td>
                                <td id="item-heading">@Model.ComboItems.ElementAt(i).Price</td>
                                <td id="calories">@Model.ComboItems.ElementAt(i).Calories</td>
                            </tr>
                            <tr>
                                <td>Medium</td>
                                @{Model.ComboItems.ElementAt(i).Size = DinoDiner.Menu.Size.Medium;}
                                <td id="item-heading">@Model.ComboItems.ElementAt(i).Price</td>
                                <td id="calories">@Model.ComboItems.ElementAt(i).Calories</td>
                            </tr>
                            <tr>
                                <td>Large</td>
                                @{Model.ComboItems.ElementAt(i).Size = DinoDiner.Menu.Size.Large;}
                                <td id="item-heading">@Model.ComboItems.ElementAt(i).Price</td>
                                <td id="calories">@Model.ComboItems.ElementAt(i).Calories</td>
                            </tr>
                        </table>
                        <h4>Ingredients: </h4>
                        <ul>
                            @foreach (string item in @Model.ComboItems.ElementAt(i).Ingredients)
                            {
                                <li>
                                    @item
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        }
        @if (Model.EntreeItems.Count() > 0 && Model.menuCategory.Contains("Entree"))
        {
            <h2>Entrees</h2>
            <div id="Entree-Items">
                @for (int i = 0; i < Model.EntreeItems.Count(); i++)
                {
                    <div class="menu-item">
                        <h3 id="menuItem">@Model.EntreeItems.ElementAt(i).ToString()</h3>
                        <table>
                            <tr>
                                <th id="item-heading">Price</th>
                                <th id="item-heading">Calories</th>
                            </tr>
                            <tr>
                                <td id="item-heading">@Model.EntreeItems.ElementAt(i).Price</td>
                                <td id="calories">@Model.EntreeItems.ElementAt(i).Calories</td>
                            </tr>
                        </table>
                        <h4>Ingredients: </h4>
                        <ul>
                            @foreach (string item in @Model.EntreeItems.ElementAt(i).Ingredients)
                            {
                                <li>
                                    @item
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        }
        @if (Model.SideItems.Count() > 0 && Model.menuCategory.Contains("Side"))
        {
            <h2>Sides</h2>
            <div id="Side-Items">
                @for (int i = 0; i < Model.SideItems.Count(); i++)
                {
                    string[] input = @Model.SideItems.ElementAt(i).ToString().Split(" ");
                    string output = Model.SideItems.ElementAt(i).ToString().Substring(input[0].Length + 1);
                    <div class="menu-item">
                        <h3 id="menuItem">@output</h3>
                        <table>
                            <tr>
                                <th id="item-heading">Size</th>
                                <th id="item-heading">Price</th>
                                <th id="item-heading">Calories</th>
                            </tr>
                            <tr>
                                <td>Small</td>
                                <td id="item-heading">@Model.SideItems.ElementAt(i).Price</td>
                                <td id="calories">@Model.SideItems.ElementAt(i).Calories</td>
                            </tr>
                            <tr>
                                <td>Medium</td>
                                @{Model.SideItems.ElementAt(i).Size = DinoDiner.Menu.Size.Medium;}
                                <td id="item-heading">@Model.SideItems.ElementAt(i).Price</td>
                                <td id="calories">@Model.SideItems.ElementAt(i).Calories</td>
                            </tr>
                            <tr>
                                <td>Large</td>
                                @{Model.SideItems.ElementAt(i).Size = DinoDiner.Menu.Size.Large;}
                                <td id="item-heading">@Model.SideItems.ElementAt(i).Price</td>
                                <td id="calories">@Model.SideItems.ElementAt(i).Calories</td>
                            </tr>
                        </table>
                        <h4>Ingredients: </h4>
                        <ul>
                            @foreach (string item in @Model.SideItems.ElementAt(i).Ingredients)
                            {
                                <li>
                                    @item
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        }
        @if (Model.DrinkItems.Count() > 0 && (Model.menuCategory != null && Model.menuCategory.Contains("Drink")))
        {
            <h2>Drinks</h2>
            <div id="Drink-Items">
                @for (int i = 0; i < Model.DrinkItems.Count(); i++)
                {
                    string [] input = @Model.DrinkItems.ElementAt(i).ToString().Split(" ");
                    string output = Model.DrinkItems.ElementAt(i).ToString().Substring(input[0].Length + 1); 
                <div class="menu-item">
                <h3 id="menuItem">@output</h3>
                <table>
                    <tr>
                        <th id="item-heading">Size</th>
                        <th id="item-heading">Price</th>
                        <th id="item-heading">Calories</th>
                    </tr>
                    <tr>
                        <td>Small</td>
                        <td id="item-heading">@Model.DrinkItems.ElementAt(i).Price</td>
                        <td id="calories">@Model.DrinkItems.ElementAt(i).Calories</td>
                    </tr>
                    <tr>
                        <td>Medium</td>
                        @{Model.DrinkItems.ElementAt(i).Size = DinoDiner.Menu.Size.Medium;}
                        <td id="item-heading">@Model.DrinkItems.ElementAt(i).Price</td>
                        <td id="calories">@Model.DrinkItems.ElementAt(i).Calories</td>
                    </tr>
                    <tr>
                        <td>Large</td>
                        @{Model.DrinkItems.ElementAt(i).Size = DinoDiner.Menu.Size.Large;}
                        <td id="item-heading">@Model.DrinkItems.ElementAt(i).Price</td>
                        <td id="calories">@Model.DrinkItems.ElementAt(i).Calories</td>
                    </tr>
                </table>
                <h4>Ingredients: </h4>
                <ul>
                    @foreach (string item in @Model.DrinkItems.ElementAt(i).Ingredients)
                    {
                        <li>
                            @item
                        </li>
                    }
                </ul>
            </div>
        }
            </div>
        }
    </div>

    <form method="post">
        <h4>Search</h4>
        <input type="text" name="search" value="@Model.search" />
        <input type="submit" value="Search and Filter" name="search" id="search" />
        <h4>Menu Category</h4>
        <div class="menu-category">
            <label>
                <input type="checkbox" name="menuCategory" value="CretaceousCombo" checked="@Model.menuCategory.Contains("CretaceousCombo")" />
                Combo
            </label>
            <label>
                <input type="checkbox" name="menuCategory" value="Entree" checked="@Model.menuCategory.Contains("Entree")" />
                Entree
            </label>
            <label>
                <input type="checkbox" name="menuCategory" value="Side" checked="@Model.menuCategory.Contains("Side")" />
                Side
            </label>
            <label>
                <input type="checkbox" name="menuCategory" value="Drink" checked="@Model.menuCategory.Contains("Drink")" />
                Drink
            </label>
        </div>

        <h4>Price</h4>
        <label>
            Min:
            <input id="minimum-price" type="number" min="0" max="15" step="0.1" name="minimumPrice" value="@Model.minimumPrice" />
        </label>
        <label>
            Max:
            <input id="maximum-price" type="number" min="0" max="15" step="0.1" name="maximumPrice" value="@Model.maximumPrice" />
        </label>

        <h4>Exclude Ingredients</h4>
        <div class="exclude-ingredients">
            @foreach (string ingredient in @Model.Menu.PossibleIngredients)
            {
                <label>
                    <input type="checkbox" name="ingredient" value="@ingredient" checked="@Model.ingredient.Contains(ingredient)" />
                    @ingredient
                </label>
            }
        </div>
    </form>
</div>